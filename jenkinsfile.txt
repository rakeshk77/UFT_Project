pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/rakeshk77/UFT_Project.git' 
        TEST_BAT_FILE = 'D:\\UFT Project\\web.bat' // Path to your batch file
        RESULTS_PATH = 'D:\\UFT Project\\Web\\Tests\\Login\\Report' // Path to the UFT test results
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Cloning the repository...'
                git branch: 'main', url: "${GIT_REPO}" // Adjust the branch if needed
            }
        }

        stage('Build') {
            steps {
                echo 'Building project...'
                // Add any build steps if needed, otherwise this stage can be skipped.
            }
        }

		stage('Test') {
			steps {
				echo 'Running UFT test...'
				script {
					def result = bat(
						script: '''
						@echo off
						set "UFT_PATH=C:\\Program Files (x86)\\OpenText\\UFT One\\bin\\UFTBatchRunnerCMD.exe"
						set "TEST_SOURCE=D:\\UFT Project\\Web\\Tests\\Login"
						set "RESULT_PATH=D:\\UFT Project\\Web\\Tests\\Login"

						echo Running UFT test...
						call "%UFT_PATH%" -source "%TEST_SOURCE%" -result "%RESULT_PATH%"
						exit /b %ERRORLEVEL%
						''',
						returnStatus: true
					)

					if (result == -532462766) {
						echo "Ignoring error code -532462766 and marking as success."
						currentBuild.result = 'SUCCESS'
					} else if (result != 0) {
						error "UFT test failed with exit code ${result}."
					}
				}
			}
		}


        stage('Archive Results') {
            steps {
                echo 'Archiving UFT test results...'
                archiveArtifacts artifacts: "${RESULTS_PATH}\\**", allowEmptyArchive: true
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                // Add deployment steps if necessary.
            }
        }

        stage('Release') {
            steps {
                echo 'Releasing application...'
                // Add release steps, such as notifying stakeholders or updating version numbers.
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
    }
}
